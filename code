<!DOCTYPE html>
<html>
<head>
    <title>SHUBHAM AI</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1a1a2e, #16213e);
            color: white;
            min-height: 100vh;
            padding: 20px;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            text-align: center;
        }
        .header {
            background: rgba(0,0,0,0.3);
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 30px;
            backdrop-filter: blur(10px);
        }
        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            background: linear-gradient(45deg, #ff0066, #0099ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 0 20px rgba(255,0,102,0.3);
        }
        .ai-circle {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background: conic-gradient(from 0deg, #ff0066, #0099ff, #ff0066);
            margin: 30px auto;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: transform 0.3s ease;
        }
        .ai-circle:hover {
            transform: scale(1.1);
        }
        .ai-circle::before {
            content: '';
            width: 130px;
            height: 130px;
            background: #1a1a2e;
            border-radius: 50%;
        }
        .input-section {
            background: rgba(255,255,255,0.1);
            padding: 20px;
            border-radius: 15px;
            margin: 20px 0;
            backdrop-filter: blur(10px);
        }
        input {
            width: 70%;
            padding: 15px;
            border: 2px solid rgba(255,255,255,0.2);
            border-radius: 25px;
            background: rgba(0,0,0,0.3);
            color: white;
            font-size: 1rem;
            outline: none;
        }
        input:focus {
            border-color: #0099ff;
        }
        button {
            padding: 15px 25px;
            background: linear-gradient(45deg, #ff0066, #0099ff);
            border: none;
            border-radius: 25px;
            color: white;
            font-weight: bold;
            cursor: pointer;
            margin-left: 10px;
            transition: transform 0.3s ease;
        }
        button:hover {
            transform: scale(1.05);
        }
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }
        .feature-card {
            background: rgba(255,255,255,0.1);
            padding: 20px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
            transition: transform 0.3s ease;
        }
        .feature-card:hover {
            transform: translateY(-5px);
        }
        .feature-card h3 {
            color: #0099ff;
            margin-bottom: 10px;
        }
        .response-box {
            background: rgba(0,0,0,0.3);
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            text-align: left;
            min-height: 100px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(0,153,255,0.3);
        }
        .typing {
            color: #0099ff;
            font-style: italic;
        }
        .error {
            color: #ff0066;
        }
        .success {
            color: #00ff99;
        }
        @media (max-width: 600px) {
            .header { padding: 15px; }
            h1 { font-size: 2rem; }
            input { width: 100%; margin-bottom: 10px; }
            button { width: 100%; margin-left: 0; margin-top: 10px; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>SHUBHAM AI</h1>
            <p>Powered by Advanced Artificial Intelligence</p>
        </div>
        
        <div class="ai-circle" onclick="startChat()"></div>
        
        <h2>Ask me anything</h2>
        <p style="opacity: 0.7; margin: 15px 0;">Your intelligent assistant is ready to help</p>
        
        <div class="input-section">
            <input type="text" id="userInput" placeholder="Type your question here...">
            <button onclick="processInput()">Ask AI</button>
        </div>
        
        <div class="response-box" id="responseBox">
            <p style="opacity: 0.7;">AI response will appear here...</p>
        </div>
        
        <div class="features">
            <div class="feature-card">
                <h3>üí¨ Smart Chat</h3>
                <p>Natural conversation interface</p>
            </div>
            <div class="feature-card">
                <h3>üé® Creative</h3>
                <p>Generate content and ideas</p>
            </div>
            <div class="feature-card">
                <h3>‚ö° Fast</h3>
                <p>Quick responses and answers</p>
            </div>
            <div class="feature-card">
                <h3>üîí Secure</h3>
                <p>Your privacy is protected</p>
            </div>
        </div>
    </div>

    <script>
        function startChat() {
            document.getElementById('responseBox').innerHTML = '<p style="opacity: 0.7;">SHUBHAM AI Interface Ready! Ask me anything.</p>';
        }
        
        async function processInput() {
            const input = document.getElementById('userInput').value;
            const responseBox = document.getElementById('responseBox');
            
            if (input.trim() === '') {
                responseBox.innerHTML = '<p class="error">Please enter a question!</p>';
                return;
            }
            
            // Show typing indicator
            responseBox.innerHTML = '<p class="typing">ü§ñ SHUBHAM AI is thinking...</p>';
            
            try {
                // Using OpenRouter API with your key
                const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer 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',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "model": "mistralai/mistral-7b-instruct",
                        "messages": [{"role": "user", "content": input}],
                        "temperature": 0.7,
                        "max_tokens": 500
                    })
                });
                
                if (response.ok) {
                    const data = await response.json();
                    const aiResponse = data.choices[0].message.content;
                    responseBox.innerHTML = `
                        <p><strong>You:</strong> ${input}</p>
                        <p><strong>SHUBHAM AI:</strong> ${aiResponse}</p>
                        <p class="success" style="margin-top: 10px; font-size: 0.9rem;">‚úÖ Real AI response received!</p>
                    `;
                } else {
                    const errorData = await response.json();
                    responseBox.innerHTML = `
                        <p class="error">‚ùå API Error: ${response.status} - ${errorData.error?.message || 'Unknown error'}</p>
                        <p style="opacity: 0.7; margin-top: 10px;">Try again or check your API key.</p>
                    `;
                }
            } catch (error) {
                responseBox.innerHTML = `
                    <p class="error">‚ùå Connection Error: ${error.message}</p>
                    <p style="opacity: 0.7; margin-top: 10px;">Check your internet connection.</p>
                `;
            }
        }
        
        // Allow Enter key
        document.getElementById('userInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                processInput();
            }
        });
        
        // Initialize
        window.onload = startChat;
    </script>
</body>
</html>